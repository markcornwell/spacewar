// star.js
//
// The start sits in the center of the screen.  It has a twinkling effect generated by random
// lenth lines and angles out from a center point.

import { Ship } from './ship.js'
import { STAR_RADIUS, MASS_SHIP, MASS_STAR } from './parm.js'

//export function Star() {
//	this.x = window.innerWidth/2;
//	this.y = window.innerHeight/2;

export function Star(xx,yy,rr) {
	return { tag: "star", x: xx, y: yy, radius: rr, dx: 0, dy: 0}
}

export function star_gravity(star,body,dt) {
	if (body.tag == "ship") {
		return star_update_force(star,body,dt);
	} else {
		return body;
	}
}

function star_update_force(star,ship,dt) {
	 // the gravitational force is proportional to the sum of masses divided by the square of the distance
	 let distX = ship.x - star.x;
	 let distY = ship.y - star.y;
	 let distSquared = distX**2 + distY**2;
	 let gravForce = (MASS_SHIP * MASS_STAR) / distSquared;       // GLOBAL CONSTANT PARAMETERS  massShip and massStar

	 // allcate the force into its x and y components
	 let sin = distY / Math.sqrt(distSquared);
	 let cos = distX / Math.sqrt(distSquared); 

	 return Object.assign( {}, ship,
	 	{ dx: ship.dx - gravForce * dt * cos
	 	, dy: ship.dy - gravForce * dt * sin 
	 	})
}
